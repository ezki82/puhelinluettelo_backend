{"version":3,"sources":["services/persons.js","components/Person.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Person","person","remove","className","name","number","onClick","Filter","filter","onChange","value","PersonForm","onNameChange","onNumberChange","addPerson","type","Notification","message","error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","infoMessage","setInfoMessage","useEffect","personService","then","response","data","showPersons","length","p","toLowerCase","includes","event","target","preventDefault","find","window","confirm","changedPerson","map","newPerson","concat","setTimeout","catch","removePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8e4622f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://arcane-brook-04388.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update, \r\n  remove\r\n}","import React from 'react'\r\n\r\nconst Person = ({ person, remove }) => {\r\n    return (\r\n        <>\r\n            <div className='person'>{person.name} {person.number}    <button onClick={remove}>delete</button></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = ({filter, onChange}) => {\r\n    return(\r\n        <form>\r\n        <div>\r\n          filter with: <input value={filter} onChange={onChange}></input>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ name, number, onNameChange, onNumberChange, addPerson }) => {\r\n    return (\r\n        <>\r\n            <h3>Add new person:</h3>\r\n            <form>\r\n                <div>\r\n                    name: <input value={name} onChange={onNameChange} /><br />\r\n          number: <input value={number} onChange={onNumberChange}></input>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick={addPerson}>add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message, error }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  else {\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"info\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [infoMessage, setInfoMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    // Show confirmation for number change if person exists\n    event.preventDefault()\n    const person = persons.find(p => p.name === newName)\n    if (person) {      \n      if (window.confirm(`${newName} is already in the phonebook. Replace number with a new one?`)) {\n        const changedPerson = {...person, number: newNumber}\n        personService.update(person.id, changedPerson)\n        setPersons(persons.map(p => p.id !== person.id ? p : changedPerson))\n      }\n      return\n    }\n    // Else, add new person\n    else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(newPerson))\n          setInfoMessage(`Added ${response.data.name}`)\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')       \n        })\n    }\n  }\n\n  const removePerson = (id) => {\n    const person = persons.find( p => p.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          setInfoMessage(`Removed ${person.name}`)\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Person ${person.name} was already removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  const showPersons = newFilter.length === 0 ? persons : persons.filter(p => p.name.toLowerCase().includes(newFilter.toLowerCase()))\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} error={true}></Notification>\n      <Notification message={infoMessage} error={false}></Notification>\n      <Filter filter={newFilter} onChange={handleFilterChange}></Filter>\n      <PersonForm name={newName} number={newNumber} onNameChange={handleNameChange} onNumberChange={handleNumberChange} addPerson={addPerson}/>\n      <h3>Numbers:</h3>\n      {showPersons.map(p => <Person key={p.name} person={p} remove={() => removePerson(p.id)}></Person>)}\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}